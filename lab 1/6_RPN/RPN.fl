%{
double pop();
void push(double c);
void copy(double* new, double* old);
%}

%%

%%

[-]?([0-9]*[.])?[0-9]+    {double d; sscanf{yytext, "%lf", &d); push(d);};
"/"    {double a = pop(); push(pop() / a);};
"*"    {double a = pop(); push(pop() * a);};
"+"    {double a = pop(); push(pop() + a);};
"-"    {double a = pop(); push(pop() - a);};
.    ;
\n      printf("%lf \n", pop());

%%

int stackSize = 10;
int stackIndex = -1;
double* stack;

double pop(){
    if(stackIndex == -1){
        return 0;
    }
    stackIndex--;
    return stack[stackIndex + 1];
}

void copy(double* new, double* old){
    int i;
    for (i = 0; i < stackSize; i++) {
        new[i] = old[i];
    }
}

void push(double c){
    if((stackSize-1) == stackIndex){
        double* temp = malloc(stackSize*2*sizeof(double));    
        copy(temp, stack);
        stackSize *= 2;
        free(stack);
        stack = temp;    
    } 
    stack[stackIndex+1] = c;
    stackIndex++;
}

int main(int argc, char *argv[]) {
  if (argc != 2) {
    fprintf(stderr, "Usage: %s <filename>\n", argv[0]);
    return -1;
  }
    stack = malloc(stackSize*sizeof(double));
  yyin = fopen(argv[1], "r");
  yylex();
  fclose(yyin);
  free(stack);
  return 0;
}