Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    4 identlist: IDENTIFIER
    5          | identlist ',' IDENTIFIER

    6 declarations: declarations VAR identlist ':' type ';'
    7             | %empty

    8 type: standardtype
    9     | ARRAY '[' NUMBER RANGE NUMBER ']' OF standardtype

   10 standardtype: INTEGER
   11             | REAL

   12 subprogdecls: subprogdecls subprogdecl ';'
   13             | %empty

   14 subprogdecl: subprogheading declarations compoundstatement

   15 $@3: %empty

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' standardtype ';'

   17 $@4: %empty

   18 subprogheading: PROCEDURE $@4 IDENTIFIER arguments ';'

   19 arguments: '(' paramlist ')'
   20          | %empty

   21 paramlist: identlist ':' type
   22          | paramlist ';' identlist ':' type

   23 compoundstatement: BEGINTOK optionalstatements ENDTOK

   24 optionalstatements: statementlist
   25                   | %empty

   26 statementlist: statement
   27              | statementlist ';' statement

   28 statement: variable ASSIGN expression
   29          | procstatement
   30          | compoundstatement
   31          | IF expression THEN statement ELSE statement
   32          | WHILE expression DO statement

   33 variable: IDENTIFIER
   34         | IDENTIFIER '[' expression ']'

   35 procstatement: IDENTIFIER
   36              | IDENTIFIER '(' exprlist ')'
   37              | WRITELN '(' exprlist ')'
   38              | READLN '(' exprlist ')'

   39 exprlist: expression
   40         | exprlist ',' expression

   41 boolexpression: simpleexpr relationop simpleexpr

   42 relationop: RELOP

   43 expression: simpleexpr
   44           | boolexpression

   45 simpleexpr: term
   46           | sign term
   47           | simpleexpr '+' term
   48           | simpleexpr '-' term

   49 sign: '+'
   50     | '-'

   51 term: factor
   52     | term multop factor

   53 multop: MULOP

   54 factor: IDENTIFIER
   55       | IDENTIFIER '(' exprlist ')'
   56       | NUMBER
   57       | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 19 36 37 38 55 57
')' (41) 3 19 36 37 38 55 57
'+' (43) 47 49
',' (44) 5 40
'-' (45) 48 50
'.' (46) 3
':' (58) 6 16 21 22
';' (59) 3 6 12 16 18 22 27
'[' (91) 9 34
']' (93) 9 34
error (256)
PROGRAM (258) 3
IDENTIFIER (259) 3 4 5 16 18 33 34 35 36 54 55
VAR (260) 6
ARRAY (261) 9
RANGE (262) 9
NUMBER (263) 9 56
OF (264) 9
INTEGER (265) 10
REAL (266) 11
FUNCTION (267) 16
PROCEDURE (268) 18
BEGINTOK (269) 23
ENDTOK (270) 23
ASSIGN (271) 28
IF (272) 31
THEN (273) 31
ELSE (274) 31
WHILE (275) 32
DO (276) 32
RELOP (277) 42
MULOP (278) 53
READLN (279) 38
WRITELN (280) 37


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 3, on right: 0
$@1 (38)
    on left: 1, on right: 3
$@2 (39)
    on left: 2, on right: 3
identlist (40)
    on left: 4 5, on right: 3 5 6 21 22
declarations (41)
    on left: 6 7, on right: 3 6 14
type (42)
    on left: 8 9, on right: 6 21 22
standardtype (43)
    on left: 10 11, on right: 8 9 16
subprogdecls (44)
    on left: 12 13, on right: 3 12
subprogdecl (45)
    on left: 14, on right: 12
subprogheading (46)
    on left: 16 18, on right: 14
$@3 (47)
    on left: 15, on right: 16
$@4 (48)
    on left: 17, on right: 18
arguments (49)
    on left: 19 20, on right: 16 18
paramlist (50)
    on left: 21 22, on right: 19 22
compoundstatement (51)
    on left: 23, on right: 3 14 30
optionalstatements (52)
    on left: 24 25, on right: 23
statementlist (53)
    on left: 26 27, on right: 24 27
statement (54)
    on left: 28 29 30 31 32, on right: 26 27 31 32
variable (55)
    on left: 33 34, on right: 28
procstatement (56)
    on left: 35 36 37 38, on right: 29
exprlist (57)
    on left: 39 40, on right: 36 37 38 40 55
boolexpression (58)
    on left: 41, on right: 44
relationop (59)
    on left: 42, on right: 41
expression (60)
    on left: 43 44, on right: 28 31 32 34 39 40 57
simpleexpr (61)
    on left: 45 46 47 48, on right: 41 43 47 48
sign (62)
    on left: 49 50, on right: 46
term (63)
    on left: 51 52, on right: 45 46 47 48 52
multop (64)
    on left: 53, on right: 52
factor (65)
    on left: 54 55 56 57, on right: 51 52


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    3 program: PROGRAM . IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    3 program: PROGRAM IDENTIFIER . '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    3 program: PROGRAM IDENTIFIER '(' . identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 7


State 6

    4 identlist: IDENTIFIER .

    $default  reduce using rule 4 (identlist)


State 7

    3 program: PROGRAM IDENTIFIER '(' identlist . ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'
    5 identlist: identlist . ',' IDENTIFIER

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    3 program: PROGRAM IDENTIFIER '(' identlist ')' . ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    ';'  shift, and go to state 10


State 9

    5 identlist: identlist ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 11


State 10

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' . $@1 declarations subprogdecls $@2 compoundstatement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 12


State 11

    5 identlist: identlist ',' IDENTIFIER .

    $default  reduce using rule 5 (identlist)


State 12

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 . declarations subprogdecls $@2 compoundstatement '.'

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13


State 13

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations . subprogdecls $@2 compoundstatement '.'
    6 declarations: declarations . VAR identlist ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 13 (subprogdecls)

    subprogdecls  go to state 15


State 14

    6 declarations: declarations VAR . identlist ':' type ';'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 16


State 15

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls . $@2 compoundstatement '.'
   12 subprogdecls: subprogdecls . subprogdecl ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18

    $default  reduce using rule 2 ($@2)

    $@2             go to state 19
    subprogdecl     go to state 20
    subprogheading  go to state 21


State 16

    5 identlist: identlist . ',' IDENTIFIER
    6 declarations: declarations VAR identlist . ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 22


State 17

   16 subprogheading: FUNCTION . $@3 IDENTIFIER arguments ':' standardtype ';'

    $default  reduce using rule 15 ($@3)

    $@3  go to state 23


State 18

   18 subprogheading: PROCEDURE . $@4 IDENTIFIER arguments ';'

    $default  reduce using rule 17 ($@4)

    $@4  go to state 24


State 19

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 . compoundstatement '.'

    BEGINTOK  shift, and go to state 25

    compoundstatement  go to state 26


State 20

   12 subprogdecls: subprogdecls subprogdecl . ';'

    ';'  shift, and go to state 27


State 21

   14 subprogdecl: subprogheading . declarations compoundstatement

    $default  reduce using rule 7 (declarations)

    declarations  go to state 28


State 22

    6 declarations: declarations VAR identlist ':' . type ';'

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    type          go to state 32
    standardtype  go to state 33


State 23

   16 subprogheading: FUNCTION $@3 . IDENTIFIER arguments ':' standardtype ';'

    IDENTIFIER  shift, and go to state 34


State 24

   18 subprogheading: PROCEDURE $@4 . IDENTIFIER arguments ';'

    IDENTIFIER  shift, and go to state 35


State 25

   23 compoundstatement: BEGINTOK . optionalstatements ENDTOK

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    $default  reduce using rule 25 (optionalstatements)

    compoundstatement   go to state 41
    optionalstatements  go to state 42
    statementlist       go to state 43
    statement           go to state 44
    variable            go to state 45
    procstatement       go to state 46


State 26

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement . '.'

    '.'  shift, and go to state 47


State 27

   12 subprogdecls: subprogdecls subprogdecl ';' .

    $default  reduce using rule 12 (subprogdecls)


State 28

    6 declarations: declarations . VAR identlist ':' type ';'
   14 subprogdecl: subprogheading declarations . compoundstatement

    VAR       shift, and go to state 14
    BEGINTOK  shift, and go to state 25

    compoundstatement  go to state 48


State 29

    9 type: ARRAY . '[' NUMBER RANGE NUMBER ']' OF standardtype

    '['  shift, and go to state 49


State 30

   10 standardtype: INTEGER .

    $default  reduce using rule 10 (standardtype)


State 31

   11 standardtype: REAL .

    $default  reduce using rule 11 (standardtype)


State 32

    6 declarations: declarations VAR identlist ':' type . ';'

    ';'  shift, and go to state 50


State 33

    8 type: standardtype .

    $default  reduce using rule 8 (type)


State 34

   16 subprogheading: FUNCTION $@3 IDENTIFIER . arguments ':' standardtype ';'

    '('  shift, and go to state 51

    $default  reduce using rule 20 (arguments)

    arguments  go to state 52


State 35

   18 subprogheading: PROCEDURE $@4 IDENTIFIER . arguments ';'

    '('  shift, and go to state 51

    $default  reduce using rule 20 (arguments)

    arguments  go to state 53


State 36

   33 variable: IDENTIFIER .
   34         | IDENTIFIER . '[' expression ']'
   35 procstatement: IDENTIFIER .
   36              | IDENTIFIER . '(' exprlist ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    ASSIGN    reduce using rule 33 (variable)
    $default  reduce using rule 35 (procstatement)


State 37

   31 statement: IF . expression THEN statement ELSE statement

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    boolexpression  go to state 61
    expression      go to state 62
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 38

   32 statement: WHILE . expression DO statement

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    boolexpression  go to state 61
    expression      go to state 67
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 39

   38 procstatement: READLN . '(' exprlist ')'

    '('  shift, and go to state 68


State 40

   37 procstatement: WRITELN . '(' exprlist ')'

    '('  shift, and go to state 69


State 41

   30 statement: compoundstatement .

    $default  reduce using rule 30 (statement)


State 42

   23 compoundstatement: BEGINTOK optionalstatements . ENDTOK

    ENDTOK  shift, and go to state 70


State 43

   24 optionalstatements: statementlist .
   27 statementlist: statementlist . ';' statement

    ';'  shift, and go to state 71

    $default  reduce using rule 24 (optionalstatements)


State 44

   26 statementlist: statement .

    $default  reduce using rule 26 (statementlist)


State 45

   28 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 46

   29 statement: procstatement .

    $default  reduce using rule 29 (statement)


State 47

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.' .

    $default  reduce using rule 3 (program)


State 48

   14 subprogdecl: subprogheading declarations compoundstatement .

    $default  reduce using rule 14 (subprogdecl)


State 49

    9 type: ARRAY '[' . NUMBER RANGE NUMBER ']' OF standardtype

    NUMBER  shift, and go to state 73


State 50

    6 declarations: declarations VAR identlist ':' type ';' .

    $default  reduce using rule 6 (declarations)


State 51

   19 arguments: '(' . paramlist ')'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 74
    paramlist  go to state 75


State 52

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments . ':' standardtype ';'

    ':'  shift, and go to state 76


State 53

   18 subprogheading: PROCEDURE $@4 IDENTIFIER arguments . ';'

    ';'  shift, and go to state 77


State 54

   36 procstatement: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    exprlist        go to state 78
    boolexpression  go to state 61
    expression      go to state 79
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 55

   34 variable: IDENTIFIER '[' . expression ']'

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    boolexpression  go to state 61
    expression      go to state 80
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 56

   54 factor: IDENTIFIER .
   55       | IDENTIFIER . '(' exprlist ')'

    '('  shift, and go to state 81

    $default  reduce using rule 54 (factor)


State 57

   56 factor: NUMBER .

    $default  reduce using rule 56 (factor)


State 58

   57 factor: '(' . expression ')'

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    boolexpression  go to state 61
    expression      go to state 82
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 59

   49 sign: '+' .

    $default  reduce using rule 49 (sign)


State 60

   50 sign: '-' .

    $default  reduce using rule 50 (sign)


State 61

   44 expression: boolexpression .

    $default  reduce using rule 44 (expression)


State 62

   31 statement: IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 83


State 63

   41 boolexpression: simpleexpr . relationop simpleexpr
   43 expression: simpleexpr .
   47 simpleexpr: simpleexpr . '+' term
   48           | simpleexpr . '-' term

    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 43 (expression)

    relationop  go to state 87


State 64

   46 simpleexpr: sign . term

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58

    term    go to state 88
    factor  go to state 66


State 65

   45 simpleexpr: term .
   52 term: term . multop factor

    MULOP  shift, and go to state 89

    $default  reduce using rule 45 (simpleexpr)

    multop  go to state 90


State 66

   51 term: factor .

    $default  reduce using rule 51 (term)


State 67

   32 statement: WHILE expression . DO statement

    DO  shift, and go to state 91


State 68

   38 procstatement: READLN '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    exprlist        go to state 92
    boolexpression  go to state 61
    expression      go to state 79
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 69

   37 procstatement: WRITELN '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    exprlist        go to state 93
    boolexpression  go to state 61
    expression      go to state 79
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 70

   23 compoundstatement: BEGINTOK optionalstatements ENDTOK .

    $default  reduce using rule 23 (compoundstatement)


State 71

   27 statementlist: statementlist ';' . statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 94
    variable           go to state 45
    procstatement      go to state 46


State 72

   28 statement: variable ASSIGN . expression

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    boolexpression  go to state 61
    expression      go to state 95
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 73

    9 type: ARRAY '[' NUMBER . RANGE NUMBER ']' OF standardtype

    RANGE  shift, and go to state 96


State 74

    5 identlist: identlist . ',' IDENTIFIER
   21 paramlist: identlist . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 97


State 75

   19 arguments: '(' paramlist . ')'
   22 paramlist: paramlist . ';' identlist ':' type

    ')'  shift, and go to state 98
    ';'  shift, and go to state 99


State 76

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' . standardtype ';'

    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    standardtype  go to state 100


State 77

   18 subprogheading: PROCEDURE $@4 IDENTIFIER arguments ';' .

    $default  reduce using rule 18 (subprogheading)


State 78

   36 procstatement: IDENTIFIER '(' exprlist . ')'
   40 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 101
    ','  shift, and go to state 102


State 79

   39 exprlist: expression .

    $default  reduce using rule 39 (exprlist)


State 80

   34 variable: IDENTIFIER '[' expression . ']'

    ']'  shift, and go to state 103


State 81

   55 factor: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    exprlist        go to state 104
    boolexpression  go to state 61
    expression      go to state 79
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 82

   57 factor: '(' expression . ')'

    ')'  shift, and go to state 105


State 83

   31 statement: IF expression THEN . statement ELSE statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 106
    variable           go to state 45
    procstatement      go to state 46


State 84

   42 relationop: RELOP .

    $default  reduce using rule 42 (relationop)


State 85

   47 simpleexpr: simpleexpr '+' . term

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58

    term    go to state 107
    factor  go to state 66


State 86

   48 simpleexpr: simpleexpr '-' . term

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58

    term    go to state 108
    factor  go to state 66


State 87

   41 boolexpression: simpleexpr relationop . simpleexpr

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    simpleexpr  go to state 109
    sign        go to state 64
    term        go to state 65
    factor      go to state 66


State 88

   46 simpleexpr: sign term .
   52 term: term . multop factor

    MULOP  shift, and go to state 89

    $default  reduce using rule 46 (simpleexpr)

    multop  go to state 90


State 89

   53 multop: MULOP .

    $default  reduce using rule 53 (multop)


State 90

   52 term: term multop . factor

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58

    factor  go to state 110


State 91

   32 statement: WHILE expression DO . statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 111
    variable           go to state 45
    procstatement      go to state 46


State 92

   38 procstatement: READLN '(' exprlist . ')'
   40 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 112
    ','  shift, and go to state 102


State 93

   37 procstatement: WRITELN '(' exprlist . ')'
   40 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 113
    ','  shift, and go to state 102


State 94

   27 statementlist: statementlist ';' statement .

    $default  reduce using rule 27 (statementlist)


State 95

   28 statement: variable ASSIGN expression .

    $default  reduce using rule 28 (statement)


State 96

    9 type: ARRAY '[' NUMBER RANGE . NUMBER ']' OF standardtype

    NUMBER  shift, and go to state 114


State 97

   21 paramlist: identlist ':' . type

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    type          go to state 115
    standardtype  go to state 33


State 98

   19 arguments: '(' paramlist ')' .

    $default  reduce using rule 19 (arguments)


State 99

   22 paramlist: paramlist ';' . identlist ':' type

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 116


State 100

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' standardtype . ';'

    ';'  shift, and go to state 117


State 101

   36 procstatement: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 36 (procstatement)


State 102

   40 exprlist: exprlist ',' . expression

    IDENTIFIER  shift, and go to state 56
    NUMBER      shift, and go to state 57
    '('         shift, and go to state 58
    '+'         shift, and go to state 59
    '-'         shift, and go to state 60

    boolexpression  go to state 61
    expression      go to state 118
    simpleexpr      go to state 63
    sign            go to state 64
    term            go to state 65
    factor          go to state 66


State 103

   34 variable: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 34 (variable)


State 104

   40 exprlist: exprlist . ',' expression
   55 factor: IDENTIFIER '(' exprlist . ')'

    ')'  shift, and go to state 119
    ','  shift, and go to state 102


State 105

   57 factor: '(' expression ')' .

    $default  reduce using rule 57 (factor)


State 106

   31 statement: IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 120


State 107

   47 simpleexpr: simpleexpr '+' term .
   52 term: term . multop factor

    MULOP  shift, and go to state 89

    $default  reduce using rule 47 (simpleexpr)

    multop  go to state 90


State 108

   48 simpleexpr: simpleexpr '-' term .
   52 term: term . multop factor

    MULOP  shift, and go to state 89

    $default  reduce using rule 48 (simpleexpr)

    multop  go to state 90


State 109

   41 boolexpression: simpleexpr relationop simpleexpr .
   47 simpleexpr: simpleexpr . '+' term
   48           | simpleexpr . '-' term

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86

    $default  reduce using rule 41 (boolexpression)


State 110

   52 term: term multop factor .

    $default  reduce using rule 52 (term)


State 111

   32 statement: WHILE expression DO statement .

    $default  reduce using rule 32 (statement)


State 112

   38 procstatement: READLN '(' exprlist ')' .

    $default  reduce using rule 38 (procstatement)


State 113

   37 procstatement: WRITELN '(' exprlist ')' .

    $default  reduce using rule 37 (procstatement)


State 114

    9 type: ARRAY '[' NUMBER RANGE NUMBER . ']' OF standardtype

    ']'  shift, and go to state 121


State 115

   21 paramlist: identlist ':' type .

    $default  reduce using rule 21 (paramlist)


State 116

    5 identlist: identlist . ',' IDENTIFIER
   22 paramlist: paramlist ';' identlist . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 122


State 117

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' standardtype ';' .

    $default  reduce using rule 16 (subprogheading)


State 118

   40 exprlist: exprlist ',' expression .

    $default  reduce using rule 40 (exprlist)


State 119

   55 factor: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 55 (factor)


State 120

   31 statement: IF expression THEN statement ELSE . statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 123
    variable           go to state 45
    procstatement      go to state 46


State 121

    9 type: ARRAY '[' NUMBER RANGE NUMBER ']' . OF standardtype

    OF  shift, and go to state 124


State 122

   22 paramlist: paramlist ';' identlist ':' . type

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    type          go to state 125
    standardtype  go to state 33


State 123

   31 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 31 (statement)


State 124

    9 type: ARRAY '[' NUMBER RANGE NUMBER ']' OF . standardtype

    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    standardtype  go to state 126


State 125

   22 paramlist: paramlist ';' identlist ':' type .

    $default  reduce using rule 22 (paramlist)


State 126

    9 type: ARRAY '[' NUMBER RANGE NUMBER ']' OF standardtype .

    $default  reduce using rule 9 (type)
