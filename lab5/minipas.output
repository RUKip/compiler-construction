Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls compoundstatement '.'

    3 identlist: IDENTIFIER
    4          | identlist ',' IDENTIFIER

    5 declarations: declarations VAR identlist ':' type ';'
    6             | %empty

    7 type: standardtype
    8     | ARRAY '[' NUMBER RANGE NUMBER ']' OF standardtype

    9 standardtype: INTEGER
   10             | REAL

   11 subprogdecls: subprogdecls subprogdecl ';'
   12             | %empty

   13 subprogdecl: subprogheading declarations compoundstatement

   14 $@2: %empty

   15 subprogheading: FUNCTION $@2 IDENTIFIER arguments ':' standardtype ';'

   16 $@3: %empty

   17 subprogheading: PROCEDURE $@3 IDENTIFIER arguments ';'

   18 arguments: '(' paramlist ')'
   19          | %empty

   20 paramlist: identlist ':' type
   21          | paramlist ';' identlist ':' type

   22 compoundstatement: BEGINTOK optionalstatements ENDTOK

   23 optionalstatements: statementlist
   24                   | %empty

   25 statementlist: statement
   26              | statementlist ';' statement

   27 statement: variable ASSIGN expression
   28          | procstatement
   29          | compoundstatement
   30          | IF expression THEN statement ELSE statement
   31          | WHILE expression DO statement

   32 variable: IDENTIFIER
   33         | IDENTIFIER '[' expression ']'

   34 procstatement: IDENTIFIER
   35              | IDENTIFIER '(' exprlist ')'
   36              | WRITELN '(' exprlist ')'
   37              | READLN '(' exprlist ')'

   38 exprlist: expression
   39         | exprlist ',' expression

   40 boolexpression: simpleexpr RELOP simpleexpr

   41 expression: simpleexpr
   42           | boolexpression

   43 simpleexpr: term
   44           | sign term
   45           | simpleexpr '+' term
   46           | simpleexpr '-' term

   47 sign: '+'
   48     | '-'

   49 term: factor
   50     | term MULOP factor

   51 factor: IDENTIFIER
   52       | IDENTIFIER '(' exprlist ')'
   53       | NUMBER
   54       | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 18 35 36 37 52 54
')' (41) 2 18 35 36 37 52 54
'+' (43) 45 47
',' (44) 4 39
'-' (45) 46 48
'.' (46) 2
':' (58) 5 15 20 21
';' (59) 2 5 11 15 17 21 26
'[' (91) 8 33
']' (93) 8 33
error (256)
PROGRAM (258) 2
IDENTIFIER (259) 2 3 4 15 17 32 33 34 35 51 52
VAR (260) 5
ARRAY (261) 8
RANGE (262) 8
NUMBER (263) 8 53
OF (264) 8
INTEGER (265) 9
REAL (266) 10
FUNCTION (267) 15
PROCEDURE (268) 17
BEGINTOK (269) 22
ENDTOK (270) 22
ASSIGN (271) 27
IF (272) 30
THEN (273) 30
ELSE (274) 30
WHILE (275) 31
DO (276) 31
RELOP (277) 40
MULOP (278) 50
READLN (279) 37
WRITELN (280) 36


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 2, on right: 0
$@1 (38)
    on left: 1, on right: 2
identlist (39)
    on left: 3 4, on right: 2 4 5 20 21
declarations (40)
    on left: 5 6, on right: 2 5 13
type (41)
    on left: 7 8, on right: 5 20 21
standardtype (42)
    on left: 9 10, on right: 7 8 15
subprogdecls (43)
    on left: 11 12, on right: 2 11
subprogdecl (44)
    on left: 13, on right: 11
subprogheading (45)
    on left: 15 17, on right: 13
$@2 (46)
    on left: 14, on right: 15
$@3 (47)
    on left: 16, on right: 17
arguments (48)
    on left: 18 19, on right: 15 17
paramlist (49)
    on left: 20 21, on right: 18 21
compoundstatement (50)
    on left: 22, on right: 2 13 29
optionalstatements (51)
    on left: 23 24, on right: 22
statementlist (52)
    on left: 25 26, on right: 23 26
statement (53)
    on left: 27 28 29 30 31, on right: 25 26 30 31
variable (54)
    on left: 32 33, on right: 27
procstatement (55)
    on left: 34 35 36 37, on right: 28
exprlist (56)
    on left: 38 39, on right: 35 36 37 39 52
boolexpression (57)
    on left: 40, on right: 42
expression (58)
    on left: 41 42, on right: 27 30 31 33 38 39 54
simpleexpr (59)
    on left: 43 44 45 46, on right: 40 41 45 46
sign (60)
    on left: 47 48, on right: 44
term (61)
    on left: 49 50, on right: 43 44 45 46 50
factor (62)
    on left: 51 52 53 54, on right: 49 50


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    2 program: PROGRAM . IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls compoundstatement '.'

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: PROGRAM IDENTIFIER . '(' identlist ')' ';' $@1 declarations subprogdecls compoundstatement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: PROGRAM IDENTIFIER '(' . identlist ')' ';' $@1 declarations subprogdecls compoundstatement '.'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 7


State 6

    3 identlist: IDENTIFIER .

    $default  reduce using rule 3 (identlist)


State 7

    2 program: PROGRAM IDENTIFIER '(' identlist . ')' ';' $@1 declarations subprogdecls compoundstatement '.'
    4 identlist: identlist . ',' IDENTIFIER

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    2 program: PROGRAM IDENTIFIER '(' identlist ')' . ';' $@1 declarations subprogdecls compoundstatement '.'

    ';'  shift, and go to state 10


State 9

    4 identlist: identlist ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 11


State 10

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' . $@1 declarations subprogdecls compoundstatement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 12


State 11

    4 identlist: identlist ',' IDENTIFIER .

    $default  reduce using rule 4 (identlist)


State 12

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 . declarations subprogdecls compoundstatement '.'

    $default  reduce using rule 6 (declarations)

    declarations  go to state 13


State 13

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations . subprogdecls compoundstatement '.'
    5 declarations: declarations . VAR identlist ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogdecls)

    subprogdecls  go to state 15


State 14

    5 declarations: declarations VAR . identlist ':' type ';'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 16


State 15

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls . compoundstatement '.'
   11 subprogdecls: subprogdecls . subprogdecl ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    BEGINTOK   shift, and go to state 19

    subprogdecl        go to state 20
    subprogheading     go to state 21
    compoundstatement  go to state 22


State 16

    4 identlist: identlist . ',' IDENTIFIER
    5 declarations: declarations VAR identlist . ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 23


State 17

   15 subprogheading: FUNCTION . $@2 IDENTIFIER arguments ':' standardtype ';'

    $default  reduce using rule 14 ($@2)

    $@2  go to state 24


State 18

   17 subprogheading: PROCEDURE . $@3 IDENTIFIER arguments ';'

    $default  reduce using rule 16 ($@3)

    $@3  go to state 25


State 19

   22 compoundstatement: BEGINTOK . optionalstatements ENDTOK

    IDENTIFIER  shift, and go to state 26
    BEGINTOK    shift, and go to state 19
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READLN      shift, and go to state 29
    WRITELN     shift, and go to state 30

    $default  reduce using rule 24 (optionalstatements)

    compoundstatement   go to state 31
    optionalstatements  go to state 32
    statementlist       go to state 33
    statement           go to state 34
    variable            go to state 35
    procstatement       go to state 36


State 20

   11 subprogdecls: subprogdecls subprogdecl . ';'

    ';'  shift, and go to state 37


State 21

   13 subprogdecl: subprogheading . declarations compoundstatement

    $default  reduce using rule 6 (declarations)

    declarations  go to state 38


State 22

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls compoundstatement . '.'

    '.'  shift, and go to state 39


State 23

    5 declarations: declarations VAR identlist ':' . type ';'

    ARRAY    shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    type          go to state 43
    standardtype  go to state 44


State 24

   15 subprogheading: FUNCTION $@2 . IDENTIFIER arguments ':' standardtype ';'

    IDENTIFIER  shift, and go to state 45


State 25

   17 subprogheading: PROCEDURE $@3 . IDENTIFIER arguments ';'

    IDENTIFIER  shift, and go to state 46


State 26

   32 variable: IDENTIFIER .
   33         | IDENTIFIER . '[' expression ']'
   34 procstatement: IDENTIFIER .
   35              | IDENTIFIER . '(' exprlist ')'

    '('  shift, and go to state 47
    '['  shift, and go to state 48

    ASSIGN    reduce using rule 32 (variable)
    $default  reduce using rule 34 (procstatement)


State 27

   30 statement: IF . expression THEN statement ELSE statement

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    boolexpression  go to state 54
    expression      go to state 55
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 28

   31 statement: WHILE . expression DO statement

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    boolexpression  go to state 54
    expression      go to state 60
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 29

   37 procstatement: READLN . '(' exprlist ')'

    '('  shift, and go to state 61


State 30

   36 procstatement: WRITELN . '(' exprlist ')'

    '('  shift, and go to state 62


State 31

   29 statement: compoundstatement .

    $default  reduce using rule 29 (statement)


State 32

   22 compoundstatement: BEGINTOK optionalstatements . ENDTOK

    ENDTOK  shift, and go to state 63


State 33

   23 optionalstatements: statementlist .
   26 statementlist: statementlist . ';' statement

    ';'  shift, and go to state 64

    $default  reduce using rule 23 (optionalstatements)


State 34

   25 statementlist: statement .

    $default  reduce using rule 25 (statementlist)


State 35

   27 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 65


State 36

   28 statement: procstatement .

    $default  reduce using rule 28 (statement)


State 37

   11 subprogdecls: subprogdecls subprogdecl ';' .

    $default  reduce using rule 11 (subprogdecls)


State 38

    5 declarations: declarations . VAR identlist ':' type ';'
   13 subprogdecl: subprogheading declarations . compoundstatement

    VAR       shift, and go to state 14
    BEGINTOK  shift, and go to state 19

    compoundstatement  go to state 66


State 39

    2 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls compoundstatement '.' .

    $default  reduce using rule 2 (program)


State 40

    8 type: ARRAY . '[' NUMBER RANGE NUMBER ']' OF standardtype

    '['  shift, and go to state 67


State 41

    9 standardtype: INTEGER .

    $default  reduce using rule 9 (standardtype)


State 42

   10 standardtype: REAL .

    $default  reduce using rule 10 (standardtype)


State 43

    5 declarations: declarations VAR identlist ':' type . ';'

    ';'  shift, and go to state 68


State 44

    7 type: standardtype .

    $default  reduce using rule 7 (type)


State 45

   15 subprogheading: FUNCTION $@2 IDENTIFIER . arguments ':' standardtype ';'

    '('  shift, and go to state 69

    $default  reduce using rule 19 (arguments)

    arguments  go to state 70


State 46

   17 subprogheading: PROCEDURE $@3 IDENTIFIER . arguments ';'

    '('  shift, and go to state 69

    $default  reduce using rule 19 (arguments)

    arguments  go to state 71


State 47

   35 procstatement: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    exprlist        go to state 72
    boolexpression  go to state 54
    expression      go to state 73
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 48

   33 variable: IDENTIFIER '[' . expression ']'

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    boolexpression  go to state 54
    expression      go to state 74
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 49

   51 factor: IDENTIFIER .
   52       | IDENTIFIER . '(' exprlist ')'

    '('  shift, and go to state 75

    $default  reduce using rule 51 (factor)


State 50

   53 factor: NUMBER .

    $default  reduce using rule 53 (factor)


State 51

   54 factor: '(' . expression ')'

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    boolexpression  go to state 54
    expression      go to state 76
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 52

   47 sign: '+' .

    $default  reduce using rule 47 (sign)


State 53

   48 sign: '-' .

    $default  reduce using rule 48 (sign)


State 54

   42 expression: boolexpression .

    $default  reduce using rule 42 (expression)


State 55

   30 statement: IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 77


State 56

   40 boolexpression: simpleexpr . RELOP simpleexpr
   41 expression: simpleexpr .
   45 simpleexpr: simpleexpr . '+' term
   46           | simpleexpr . '-' term

    RELOP  shift, and go to state 78
    '+'    shift, and go to state 79
    '-'    shift, and go to state 80

    $default  reduce using rule 41 (expression)


State 57

   44 simpleexpr: sign . term

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51

    term    go to state 81
    factor  go to state 59


State 58

   43 simpleexpr: term .
   50 term: term . MULOP factor

    MULOP  shift, and go to state 82

    $default  reduce using rule 43 (simpleexpr)


State 59

   49 term: factor .

    $default  reduce using rule 49 (term)


State 60

   31 statement: WHILE expression . DO statement

    DO  shift, and go to state 83


State 61

   37 procstatement: READLN '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    exprlist        go to state 84
    boolexpression  go to state 54
    expression      go to state 73
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 62

   36 procstatement: WRITELN '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    exprlist        go to state 85
    boolexpression  go to state 54
    expression      go to state 73
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 63

   22 compoundstatement: BEGINTOK optionalstatements ENDTOK .

    $default  reduce using rule 22 (compoundstatement)


State 64

   26 statementlist: statementlist ';' . statement

    IDENTIFIER  shift, and go to state 26
    BEGINTOK    shift, and go to state 19
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READLN      shift, and go to state 29
    WRITELN     shift, and go to state 30

    compoundstatement  go to state 31
    statement          go to state 86
    variable           go to state 35
    procstatement      go to state 36


State 65

   27 statement: variable ASSIGN . expression

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    boolexpression  go to state 54
    expression      go to state 87
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 66

   13 subprogdecl: subprogheading declarations compoundstatement .

    $default  reduce using rule 13 (subprogdecl)


State 67

    8 type: ARRAY '[' . NUMBER RANGE NUMBER ']' OF standardtype

    NUMBER  shift, and go to state 88


State 68

    5 declarations: declarations VAR identlist ':' type ';' .

    $default  reduce using rule 5 (declarations)


State 69

   18 arguments: '(' . paramlist ')'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 89
    paramlist  go to state 90


State 70

   15 subprogheading: FUNCTION $@2 IDENTIFIER arguments . ':' standardtype ';'

    ':'  shift, and go to state 91


State 71

   17 subprogheading: PROCEDURE $@3 IDENTIFIER arguments . ';'

    ';'  shift, and go to state 92


State 72

   35 procstatement: IDENTIFIER '(' exprlist . ')'
   39 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 93
    ','  shift, and go to state 94


State 73

   38 exprlist: expression .

    $default  reduce using rule 38 (exprlist)


State 74

   33 variable: IDENTIFIER '[' expression . ']'

    ']'  shift, and go to state 95


State 75

   52 factor: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    exprlist        go to state 96
    boolexpression  go to state 54
    expression      go to state 73
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 76

   54 factor: '(' expression . ')'

    ')'  shift, and go to state 97


State 77

   30 statement: IF expression THEN . statement ELSE statement

    IDENTIFIER  shift, and go to state 26
    BEGINTOK    shift, and go to state 19
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READLN      shift, and go to state 29
    WRITELN     shift, and go to state 30

    compoundstatement  go to state 31
    statement          go to state 98
    variable           go to state 35
    procstatement      go to state 36


State 78

   40 boolexpression: simpleexpr RELOP . simpleexpr

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    simpleexpr  go to state 99
    sign        go to state 57
    term        go to state 58
    factor      go to state 59


State 79

   45 simpleexpr: simpleexpr '+' . term

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51

    term    go to state 100
    factor  go to state 59


State 80

   46 simpleexpr: simpleexpr '-' . term

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51

    term    go to state 101
    factor  go to state 59


State 81

   44 simpleexpr: sign term .
   50 term: term . MULOP factor

    MULOP  shift, and go to state 82

    $default  reduce using rule 44 (simpleexpr)


State 82

   50 term: term MULOP . factor

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51

    factor  go to state 102


State 83

   31 statement: WHILE expression DO . statement

    IDENTIFIER  shift, and go to state 26
    BEGINTOK    shift, and go to state 19
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READLN      shift, and go to state 29
    WRITELN     shift, and go to state 30

    compoundstatement  go to state 31
    statement          go to state 103
    variable           go to state 35
    procstatement      go to state 36


State 84

   37 procstatement: READLN '(' exprlist . ')'
   39 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 104
    ','  shift, and go to state 94


State 85

   36 procstatement: WRITELN '(' exprlist . ')'
   39 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 105
    ','  shift, and go to state 94


State 86

   26 statementlist: statementlist ';' statement .

    $default  reduce using rule 26 (statementlist)


State 87

   27 statement: variable ASSIGN expression .

    $default  reduce using rule 27 (statement)


State 88

    8 type: ARRAY '[' NUMBER . RANGE NUMBER ']' OF standardtype

    RANGE  shift, and go to state 106


State 89

    4 identlist: identlist . ',' IDENTIFIER
   20 paramlist: identlist . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 107


State 90

   18 arguments: '(' paramlist . ')'
   21 paramlist: paramlist . ';' identlist ':' type

    ')'  shift, and go to state 108
    ';'  shift, and go to state 109


State 91

   15 subprogheading: FUNCTION $@2 IDENTIFIER arguments ':' . standardtype ';'

    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    standardtype  go to state 110


State 92

   17 subprogheading: PROCEDURE $@3 IDENTIFIER arguments ';' .

    $default  reduce using rule 17 (subprogheading)


State 93

   35 procstatement: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 35 (procstatement)


State 94

   39 exprlist: exprlist ',' . expression

    IDENTIFIER  shift, and go to state 49
    NUMBER      shift, and go to state 50
    '('         shift, and go to state 51
    '+'         shift, and go to state 52
    '-'         shift, and go to state 53

    boolexpression  go to state 54
    expression      go to state 111
    simpleexpr      go to state 56
    sign            go to state 57
    term            go to state 58
    factor          go to state 59


State 95

   33 variable: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 33 (variable)


State 96

   39 exprlist: exprlist . ',' expression
   52 factor: IDENTIFIER '(' exprlist . ')'

    ')'  shift, and go to state 112
    ','  shift, and go to state 94


State 97

   54 factor: '(' expression ')' .

    $default  reduce using rule 54 (factor)


State 98

   30 statement: IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 113


State 99

   40 boolexpression: simpleexpr RELOP simpleexpr .
   45 simpleexpr: simpleexpr . '+' term
   46           | simpleexpr . '-' term

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80

    $default  reduce using rule 40 (boolexpression)


State 100

   45 simpleexpr: simpleexpr '+' term .
   50 term: term . MULOP factor

    MULOP  shift, and go to state 82

    $default  reduce using rule 45 (simpleexpr)


State 101

   46 simpleexpr: simpleexpr '-' term .
   50 term: term . MULOP factor

    MULOP  shift, and go to state 82

    $default  reduce using rule 46 (simpleexpr)


State 102

   50 term: term MULOP factor .

    $default  reduce using rule 50 (term)


State 103

   31 statement: WHILE expression DO statement .

    $default  reduce using rule 31 (statement)


State 104

   37 procstatement: READLN '(' exprlist ')' .

    $default  reduce using rule 37 (procstatement)


State 105

   36 procstatement: WRITELN '(' exprlist ')' .

    $default  reduce using rule 36 (procstatement)


State 106

    8 type: ARRAY '[' NUMBER RANGE . NUMBER ']' OF standardtype

    NUMBER  shift, and go to state 114


State 107

   20 paramlist: identlist ':' . type

    ARRAY    shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    type          go to state 115
    standardtype  go to state 44


State 108

   18 arguments: '(' paramlist ')' .

    $default  reduce using rule 18 (arguments)


State 109

   21 paramlist: paramlist ';' . identlist ':' type

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 116


State 110

   15 subprogheading: FUNCTION $@2 IDENTIFIER arguments ':' standardtype . ';'

    ';'  shift, and go to state 117


State 111

   39 exprlist: exprlist ',' expression .

    $default  reduce using rule 39 (exprlist)


State 112

   52 factor: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 52 (factor)


State 113

   30 statement: IF expression THEN statement ELSE . statement

    IDENTIFIER  shift, and go to state 26
    BEGINTOK    shift, and go to state 19
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READLN      shift, and go to state 29
    WRITELN     shift, and go to state 30

    compoundstatement  go to state 31
    statement          go to state 118
    variable           go to state 35
    procstatement      go to state 36


State 114

    8 type: ARRAY '[' NUMBER RANGE NUMBER . ']' OF standardtype

    ']'  shift, and go to state 119


State 115

   20 paramlist: identlist ':' type .

    $default  reduce using rule 20 (paramlist)


State 116

    4 identlist: identlist . ',' IDENTIFIER
   21 paramlist: paramlist ';' identlist . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 120


State 117

   15 subprogheading: FUNCTION $@2 IDENTIFIER arguments ':' standardtype ';' .

    $default  reduce using rule 15 (subprogheading)


State 118

   30 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 30 (statement)


State 119

    8 type: ARRAY '[' NUMBER RANGE NUMBER ']' . OF standardtype

    OF  shift, and go to state 121


State 120

   21 paramlist: paramlist ';' identlist ':' . type

    ARRAY    shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    type          go to state 122
    standardtype  go to state 44


State 121

    8 type: ARRAY '[' NUMBER RANGE NUMBER ']' OF . standardtype

    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42

    standardtype  go to state 123


State 122

   21 paramlist: paramlist ';' identlist ':' type .

    $default  reduce using rule 21 (paramlist)


State 123

    8 type: ARRAY '[' NUMBER RANGE NUMBER ']' OF standardtype .

    $default  reduce using rule 8 (type)
