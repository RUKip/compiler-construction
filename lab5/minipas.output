Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    4 identlist: IDENTIFIER
    5          | identlist ',' IDENTIFIER

    6 declarations: declarations VAR identlist ':' type ';'
    7             | %empty

    8 type: standardtype
    9     | ARRAY '[' NUMBER RANGE NUMBER ']' OF standardtype

   10 standardtype: INTEGER
   11             | REAL

   12 subprogdecls: subprogdecls subprogdecl ';'
   13             | %empty

   14 subprogdecl: subprogheading declarations compoundstatement

   15 $@3: %empty

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' standardtype ';'

   17 $@4: %empty

   18 subprogheading: PROCEDURE $@4 IDENTIFIER arguments ';'

   19 arguments: '(' paramlist ')'
   20          | %empty

   21 paramlist: identlist ':' type
   22          | paramlist ';' identlist ':' type

   23 compoundstatement: BEGINTOK optionalstatements ENDTOK

   24 optionalstatements: statementlist
   25                   | %empty

   26 statementlist: statement
   27              | statementlist ';' statement

   28 statement: variable ASSIGN expression
   29          | procstatement
   30          | compoundstatement

   31 $@5: %empty

   32 $@6: %empty

   33 statement: ifrule expression thenrule $@5 statement $@6 ELSE statement

   34 $@7: %empty

   35 statement: whilerule expression dorule $@7 statement

   36 ifrule: IF

   37 thenrule: THEN

   38 whilerule: WHILE

   39 dorule: DO

   40 variable: IDENTIFIER
   41         | IDENTIFIER '[' expression ']'

   42 procstatement: IDENTIFIER
   43              | IDENTIFIER '(' exprlist ')'
   44              | WRITELN '(' exprlist ')'
   45              | READLN '(' exprlist ')'

   46 exprlist: expression
   47         | exprlist ',' expression

   48 boolexpression: simpleexpr relationop simpleexpr

   49 relationop: RELOP

   50 expression: simpleexpr
   51           | boolexpression

   52 simpleexpr: term
   53           | sign term
   54           | simpleexpr '+' term
   55           | simpleexpr '-' term

   56 sign: '+'
   57     | '-'

   58 term: factor
   59     | term multop factor

   60 multop: MULOP

   61 factor: IDENTIFIER
   62       | IDENTIFIER '(' exprlist ')'
   63       | NUMBER
   64       | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 19 43 44 45 62 64
')' (41) 3 19 43 44 45 62 64
'+' (43) 54 56
',' (44) 5 47
'-' (45) 55 57
'.' (46) 3
':' (58) 6 16 21 22
';' (59) 3 6 12 16 18 22 27
'[' (91) 9 41
']' (93) 9 41
error (256)
PROGRAM (258) 3
IDENTIFIER (259) 3 4 5 16 18 40 41 42 43 61 62
VAR (260) 6
ARRAY (261) 9
RANGE (262) 9
NUMBER (263) 9 63
OF (264) 9
INTEGER (265) 10
REAL (266) 11
FUNCTION (267) 16
PROCEDURE (268) 18
BEGINTOK (269) 23
ENDTOK (270) 23
ASSIGN (271) 28
IF (272) 36
THEN (273) 37
ELSE (274) 33
WHILE (275) 38
DO (276) 39
RELOP (277) 49
MULOP (278) 60
READLN (279) 45
WRITELN (280) 44


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 3, on right: 0
$@1 (38)
    on left: 1, on right: 3
$@2 (39)
    on left: 2, on right: 3
identlist (40)
    on left: 4 5, on right: 3 5 6 21 22
declarations (41)
    on left: 6 7, on right: 3 6 14
type (42)
    on left: 8 9, on right: 6 21 22
standardtype (43)
    on left: 10 11, on right: 8 9 16
subprogdecls (44)
    on left: 12 13, on right: 3 12
subprogdecl (45)
    on left: 14, on right: 12
subprogheading (46)
    on left: 16 18, on right: 14
$@3 (47)
    on left: 15, on right: 16
$@4 (48)
    on left: 17, on right: 18
arguments (49)
    on left: 19 20, on right: 16 18
paramlist (50)
    on left: 21 22, on right: 19 22
compoundstatement (51)
    on left: 23, on right: 3 14 30
optionalstatements (52)
    on left: 24 25, on right: 23
statementlist (53)
    on left: 26 27, on right: 24 27
statement (54)
    on left: 28 29 30 33 35, on right: 26 27 33 35
$@5 (55)
    on left: 31, on right: 33
$@6 (56)
    on left: 32, on right: 33
$@7 (57)
    on left: 34, on right: 35
ifrule (58)
    on left: 36, on right: 33
thenrule (59)
    on left: 37, on right: 33
whilerule (60)
    on left: 38, on right: 35
dorule (61)
    on left: 39, on right: 35
variable (62)
    on left: 40 41, on right: 28
procstatement (63)
    on left: 42 43 44 45, on right: 29
exprlist (64)
    on left: 46 47, on right: 43 44 45 47 62
boolexpression (65)
    on left: 48, on right: 51
relationop (66)
    on left: 49, on right: 48
expression (67)
    on left: 50 51, on right: 28 33 35 41 46 47 64
simpleexpr (68)
    on left: 52 53 54 55, on right: 48 50 54 55
sign (69)
    on left: 56 57, on right: 53
term (70)
    on left: 58 59, on right: 52 53 54 55 59
multop (71)
    on left: 60, on right: 59
factor (72)
    on left: 61 62 63 64, on right: 58 59


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    3 program: PROGRAM . IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    3 program: PROGRAM IDENTIFIER . '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    3 program: PROGRAM IDENTIFIER '(' . identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 7


State 6

    4 identlist: IDENTIFIER .

    $default  reduce using rule 4 (identlist)


State 7

    3 program: PROGRAM IDENTIFIER '(' identlist . ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.'
    5 identlist: identlist . ',' IDENTIFIER

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    3 program: PROGRAM IDENTIFIER '(' identlist ')' . ';' $@1 declarations subprogdecls $@2 compoundstatement '.'

    ';'  shift, and go to state 10


State 9

    5 identlist: identlist ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 11


State 10

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' . $@1 declarations subprogdecls $@2 compoundstatement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 12


State 11

    5 identlist: identlist ',' IDENTIFIER .

    $default  reduce using rule 5 (identlist)


State 12

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 . declarations subprogdecls $@2 compoundstatement '.'

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13


State 13

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations . subprogdecls $@2 compoundstatement '.'
    6 declarations: declarations . VAR identlist ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 13 (subprogdecls)

    subprogdecls  go to state 15


State 14

    6 declarations: declarations VAR . identlist ':' type ';'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 16


State 15

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls . $@2 compoundstatement '.'
   12 subprogdecls: subprogdecls . subprogdecl ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18

    $default  reduce using rule 2 ($@2)

    $@2             go to state 19
    subprogdecl     go to state 20
    subprogheading  go to state 21


State 16

    5 identlist: identlist . ',' IDENTIFIER
    6 declarations: declarations VAR identlist . ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 22


State 17

   16 subprogheading: FUNCTION . $@3 IDENTIFIER arguments ':' standardtype ';'

    $default  reduce using rule 15 ($@3)

    $@3  go to state 23


State 18

   18 subprogheading: PROCEDURE . $@4 IDENTIFIER arguments ';'

    $default  reduce using rule 17 ($@4)

    $@4  go to state 24


State 19

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 . compoundstatement '.'

    BEGINTOK  shift, and go to state 25

    compoundstatement  go to state 26


State 20

   12 subprogdecls: subprogdecls subprogdecl . ';'

    ';'  shift, and go to state 27


State 21

   14 subprogdecl: subprogheading . declarations compoundstatement

    $default  reduce using rule 7 (declarations)

    declarations  go to state 28


State 22

    6 declarations: declarations VAR identlist ':' . type ';'

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    type          go to state 32
    standardtype  go to state 33


State 23

   16 subprogheading: FUNCTION $@3 . IDENTIFIER arguments ':' standardtype ';'

    IDENTIFIER  shift, and go to state 34


State 24

   18 subprogheading: PROCEDURE $@4 . IDENTIFIER arguments ';'

    IDENTIFIER  shift, and go to state 35


State 25

   23 compoundstatement: BEGINTOK . optionalstatements ENDTOK

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    $default  reduce using rule 25 (optionalstatements)

    compoundstatement   go to state 41
    optionalstatements  go to state 42
    statementlist       go to state 43
    statement           go to state 44
    ifrule              go to state 45
    whilerule           go to state 46
    variable            go to state 47
    procstatement       go to state 48


State 26

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement . '.'

    '.'  shift, and go to state 49


State 27

   12 subprogdecls: subprogdecls subprogdecl ';' .

    $default  reduce using rule 12 (subprogdecls)


State 28

    6 declarations: declarations . VAR identlist ':' type ';'
   14 subprogdecl: subprogheading declarations . compoundstatement

    VAR       shift, and go to state 14
    BEGINTOK  shift, and go to state 25

    compoundstatement  go to state 50


State 29

    9 type: ARRAY . '[' NUMBER RANGE NUMBER ']' OF standardtype

    '['  shift, and go to state 51


State 30

   10 standardtype: INTEGER .

    $default  reduce using rule 10 (standardtype)


State 31

   11 standardtype: REAL .

    $default  reduce using rule 11 (standardtype)


State 32

    6 declarations: declarations VAR identlist ':' type . ';'

    ';'  shift, and go to state 52


State 33

    8 type: standardtype .

    $default  reduce using rule 8 (type)


State 34

   16 subprogheading: FUNCTION $@3 IDENTIFIER . arguments ':' standardtype ';'

    '('  shift, and go to state 53

    $default  reduce using rule 20 (arguments)

    arguments  go to state 54


State 35

   18 subprogheading: PROCEDURE $@4 IDENTIFIER . arguments ';'

    '('  shift, and go to state 53

    $default  reduce using rule 20 (arguments)

    arguments  go to state 55


State 36

   40 variable: IDENTIFIER .
   41         | IDENTIFIER . '[' expression ']'
   42 procstatement: IDENTIFIER .
   43              | IDENTIFIER . '(' exprlist ')'

    '('  shift, and go to state 56
    '['  shift, and go to state 57

    ASSIGN    reduce using rule 40 (variable)
    $default  reduce using rule 42 (procstatement)


State 37

   36 ifrule: IF .

    $default  reduce using rule 36 (ifrule)


State 38

   38 whilerule: WHILE .

    $default  reduce using rule 38 (whilerule)


State 39

   45 procstatement: READLN . '(' exprlist ')'

    '('  shift, and go to state 58


State 40

   44 procstatement: WRITELN . '(' exprlist ')'

    '('  shift, and go to state 59


State 41

   30 statement: compoundstatement .

    $default  reduce using rule 30 (statement)


State 42

   23 compoundstatement: BEGINTOK optionalstatements . ENDTOK

    ENDTOK  shift, and go to state 60


State 43

   24 optionalstatements: statementlist .
   27 statementlist: statementlist . ';' statement

    ';'  shift, and go to state 61

    $default  reduce using rule 24 (optionalstatements)


State 44

   26 statementlist: statement .

    $default  reduce using rule 26 (statementlist)


State 45

   33 statement: ifrule . expression thenrule $@5 statement $@6 ELSE statement

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    boolexpression  go to state 67
    expression      go to state 68
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 46

   35 statement: whilerule . expression dorule $@7 statement

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    boolexpression  go to state 67
    expression      go to state 73
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 47

   28 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 48

   29 statement: procstatement .

    $default  reduce using rule 29 (statement)


State 49

    3 program: PROGRAM IDENTIFIER '(' identlist ')' ';' $@1 declarations subprogdecls $@2 compoundstatement '.' .

    $default  reduce using rule 3 (program)


State 50

   14 subprogdecl: subprogheading declarations compoundstatement .

    $default  reduce using rule 14 (subprogdecl)


State 51

    9 type: ARRAY '[' . NUMBER RANGE NUMBER ']' OF standardtype

    NUMBER  shift, and go to state 75


State 52

    6 declarations: declarations VAR identlist ':' type ';' .

    $default  reduce using rule 6 (declarations)


State 53

   19 arguments: '(' . paramlist ')'

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 76
    paramlist  go to state 77


State 54

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments . ':' standardtype ';'

    ':'  shift, and go to state 78


State 55

   18 subprogheading: PROCEDURE $@4 IDENTIFIER arguments . ';'

    ';'  shift, and go to state 79


State 56

   43 procstatement: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    exprlist        go to state 80
    boolexpression  go to state 67
    expression      go to state 81
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 57

   41 variable: IDENTIFIER '[' . expression ']'

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    boolexpression  go to state 67
    expression      go to state 82
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 58

   45 procstatement: READLN '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    exprlist        go to state 83
    boolexpression  go to state 67
    expression      go to state 81
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 59

   44 procstatement: WRITELN '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    exprlist        go to state 84
    boolexpression  go to state 67
    expression      go to state 81
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 60

   23 compoundstatement: BEGINTOK optionalstatements ENDTOK .

    $default  reduce using rule 23 (compoundstatement)


State 61

   27 statementlist: statementlist ';' . statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 85
    ifrule             go to state 45
    whilerule          go to state 46
    variable           go to state 47
    procstatement      go to state 48


State 62

   61 factor: IDENTIFIER .
   62       | IDENTIFIER . '(' exprlist ')'

    '('  shift, and go to state 86

    $default  reduce using rule 61 (factor)


State 63

   63 factor: NUMBER .

    $default  reduce using rule 63 (factor)


State 64

   64 factor: '(' . expression ')'

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    boolexpression  go to state 67
    expression      go to state 87
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 65

   56 sign: '+' .

    $default  reduce using rule 56 (sign)


State 66

   57 sign: '-' .

    $default  reduce using rule 57 (sign)


State 67

   51 expression: boolexpression .

    $default  reduce using rule 51 (expression)


State 68

   33 statement: ifrule expression . thenrule $@5 statement $@6 ELSE statement

    THEN  shift, and go to state 88

    thenrule  go to state 89


State 69

   48 boolexpression: simpleexpr . relationop simpleexpr
   50 expression: simpleexpr .
   54 simpleexpr: simpleexpr . '+' term
   55           | simpleexpr . '-' term

    RELOP  shift, and go to state 90
    '+'    shift, and go to state 91
    '-'    shift, and go to state 92

    $default  reduce using rule 50 (expression)

    relationop  go to state 93


State 70

   53 simpleexpr: sign . term

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64

    term    go to state 94
    factor  go to state 72


State 71

   52 simpleexpr: term .
   59 term: term . multop factor

    MULOP  shift, and go to state 95

    $default  reduce using rule 52 (simpleexpr)

    multop  go to state 96


State 72

   58 term: factor .

    $default  reduce using rule 58 (term)


State 73

   35 statement: whilerule expression . dorule $@7 statement

    DO  shift, and go to state 97

    dorule  go to state 98


State 74

   28 statement: variable ASSIGN . expression

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    boolexpression  go to state 67
    expression      go to state 99
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 75

    9 type: ARRAY '[' NUMBER . RANGE NUMBER ']' OF standardtype

    RANGE  shift, and go to state 100


State 76

    5 identlist: identlist . ',' IDENTIFIER
   21 paramlist: identlist . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 101


State 77

   19 arguments: '(' paramlist . ')'
   22 paramlist: paramlist . ';' identlist ':' type

    ')'  shift, and go to state 102
    ';'  shift, and go to state 103


State 78

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' . standardtype ';'

    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    standardtype  go to state 104


State 79

   18 subprogheading: PROCEDURE $@4 IDENTIFIER arguments ';' .

    $default  reduce using rule 18 (subprogheading)


State 80

   43 procstatement: IDENTIFIER '(' exprlist . ')'
   47 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 105
    ','  shift, and go to state 106


State 81

   46 exprlist: expression .

    $default  reduce using rule 46 (exprlist)


State 82

   41 variable: IDENTIFIER '[' expression . ']'

    ']'  shift, and go to state 107


State 83

   45 procstatement: READLN '(' exprlist . ')'
   47 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 108
    ','  shift, and go to state 106


State 84

   44 procstatement: WRITELN '(' exprlist . ')'
   47 exprlist: exprlist . ',' expression

    ')'  shift, and go to state 109
    ','  shift, and go to state 106


State 85

   27 statementlist: statementlist ';' statement .

    $default  reduce using rule 27 (statementlist)


State 86

   62 factor: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    exprlist        go to state 110
    boolexpression  go to state 67
    expression      go to state 81
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 87

   64 factor: '(' expression . ')'

    ')'  shift, and go to state 111


State 88

   37 thenrule: THEN .

    $default  reduce using rule 37 (thenrule)


State 89

   33 statement: ifrule expression thenrule . $@5 statement $@6 ELSE statement

    $default  reduce using rule 31 ($@5)

    $@5  go to state 112


State 90

   49 relationop: RELOP .

    $default  reduce using rule 49 (relationop)


State 91

   54 simpleexpr: simpleexpr '+' . term

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64

    term    go to state 113
    factor  go to state 72


State 92

   55 simpleexpr: simpleexpr '-' . term

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64

    term    go to state 114
    factor  go to state 72


State 93

   48 boolexpression: simpleexpr relationop . simpleexpr

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    simpleexpr  go to state 115
    sign        go to state 70
    term        go to state 71
    factor      go to state 72


State 94

   53 simpleexpr: sign term .
   59 term: term . multop factor

    MULOP  shift, and go to state 95

    $default  reduce using rule 53 (simpleexpr)

    multop  go to state 96


State 95

   60 multop: MULOP .

    $default  reduce using rule 60 (multop)


State 96

   59 term: term multop . factor

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64

    factor  go to state 116


State 97

   39 dorule: DO .

    $default  reduce using rule 39 (dorule)


State 98

   35 statement: whilerule expression dorule . $@7 statement

    $default  reduce using rule 34 ($@7)

    $@7  go to state 117


State 99

   28 statement: variable ASSIGN expression .

    $default  reduce using rule 28 (statement)


State 100

    9 type: ARRAY '[' NUMBER RANGE . NUMBER ']' OF standardtype

    NUMBER  shift, and go to state 118


State 101

   21 paramlist: identlist ':' . type

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    type          go to state 119
    standardtype  go to state 33


State 102

   19 arguments: '(' paramlist ')' .

    $default  reduce using rule 19 (arguments)


State 103

   22 paramlist: paramlist ';' . identlist ':' type

    IDENTIFIER  shift, and go to state 6

    identlist  go to state 120


State 104

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' standardtype . ';'

    ';'  shift, and go to state 121


State 105

   43 procstatement: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 43 (procstatement)


State 106

   47 exprlist: exprlist ',' . expression

    IDENTIFIER  shift, and go to state 62
    NUMBER      shift, and go to state 63
    '('         shift, and go to state 64
    '+'         shift, and go to state 65
    '-'         shift, and go to state 66

    boolexpression  go to state 67
    expression      go to state 122
    simpleexpr      go to state 69
    sign            go to state 70
    term            go to state 71
    factor          go to state 72


State 107

   41 variable: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 41 (variable)


State 108

   45 procstatement: READLN '(' exprlist ')' .

    $default  reduce using rule 45 (procstatement)


State 109

   44 procstatement: WRITELN '(' exprlist ')' .

    $default  reduce using rule 44 (procstatement)


State 110

   47 exprlist: exprlist . ',' expression
   62 factor: IDENTIFIER '(' exprlist . ')'

    ')'  shift, and go to state 123
    ','  shift, and go to state 106


State 111

   64 factor: '(' expression ')' .

    $default  reduce using rule 64 (factor)


State 112

   33 statement: ifrule expression thenrule $@5 . statement $@6 ELSE statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 124
    ifrule             go to state 45
    whilerule          go to state 46
    variable           go to state 47
    procstatement      go to state 48


State 113

   54 simpleexpr: simpleexpr '+' term .
   59 term: term . multop factor

    MULOP  shift, and go to state 95

    $default  reduce using rule 54 (simpleexpr)

    multop  go to state 96


State 114

   55 simpleexpr: simpleexpr '-' term .
   59 term: term . multop factor

    MULOP  shift, and go to state 95

    $default  reduce using rule 55 (simpleexpr)

    multop  go to state 96


State 115

   48 boolexpression: simpleexpr relationop simpleexpr .
   54 simpleexpr: simpleexpr . '+' term
   55           | simpleexpr . '-' term

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92

    $default  reduce using rule 48 (boolexpression)


State 116

   59 term: term multop factor .

    $default  reduce using rule 59 (term)


State 117

   35 statement: whilerule expression dorule $@7 . statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 125
    ifrule             go to state 45
    whilerule          go to state 46
    variable           go to state 47
    procstatement      go to state 48


State 118

    9 type: ARRAY '[' NUMBER RANGE NUMBER . ']' OF standardtype

    ']'  shift, and go to state 126


State 119

   21 paramlist: identlist ':' type .

    $default  reduce using rule 21 (paramlist)


State 120

    5 identlist: identlist . ',' IDENTIFIER
   22 paramlist: paramlist ';' identlist . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 127


State 121

   16 subprogheading: FUNCTION $@3 IDENTIFIER arguments ':' standardtype ';' .

    $default  reduce using rule 16 (subprogheading)


State 122

   47 exprlist: exprlist ',' expression .

    $default  reduce using rule 47 (exprlist)


State 123

   62 factor: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 62 (factor)


State 124

   33 statement: ifrule expression thenrule $@5 statement . $@6 ELSE statement

    $default  reduce using rule 32 ($@6)

    $@6  go to state 128


State 125

   35 statement: whilerule expression dorule $@7 statement .

    $default  reduce using rule 35 (statement)


State 126

    9 type: ARRAY '[' NUMBER RANGE NUMBER ']' . OF standardtype

    OF  shift, and go to state 129


State 127

   22 paramlist: paramlist ';' identlist ':' . type

    ARRAY    shift, and go to state 29
    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    type          go to state 130
    standardtype  go to state 33


State 128

   33 statement: ifrule expression thenrule $@5 statement $@6 . ELSE statement

    ELSE  shift, and go to state 131


State 129

    9 type: ARRAY '[' NUMBER RANGE NUMBER ']' OF . standardtype

    INTEGER  shift, and go to state 30
    REAL     shift, and go to state 31

    standardtype  go to state 132


State 130

   22 paramlist: paramlist ';' identlist ':' type .

    $default  reduce using rule 22 (paramlist)


State 131

   33 statement: ifrule expression thenrule $@5 statement $@6 ELSE . statement

    IDENTIFIER  shift, and go to state 36
    BEGINTOK    shift, and go to state 25
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    READLN      shift, and go to state 39
    WRITELN     shift, and go to state 40

    compoundstatement  go to state 41
    statement          go to state 133
    ifrule             go to state 45
    whilerule          go to state 46
    variable           go to state 47
    procstatement      go to state 48


State 132

    9 type: ARRAY '[' NUMBER RANGE NUMBER ']' OF standardtype .

    $default  reduce using rule 9 (type)


State 133

   33 statement: ifrule expression thenrule $@5 statement $@6 ELSE statement .

    $default  reduce using rule 33 (statement)
